[target.x86_64-apple-darwin]
rustflags = ['-C', 'link-arg=-lSystem']

[target.asmjs-unknown-emscripten]
# Similar to the above linker configuration, but this only applies to
# when the `$triple` is being compiled for.
# linker = ".."
# custom flags to pass to all compiler invocations that target $triple
# this value overrides build.rustflags when both are present
rustflags = [
    "-C", "link-arg=--separate-asm",
    "-C", "link-arg=--llvm-lto", "-C", "link-arg=3",
    '-C', 'link-arg=-s', '-C', 'link-arg=ONLY_MY_CODE=1',
    "-C", "link-arg=-s", "-C", "link-arg=INVOKE_RUN=0",
    "-C", "link-arg=-s", "-C", "link-arg=ABORTING_MALLOC=0",
    "-C", "link-arg=-s", "-C", "link-arg=MODULARIZE=1",
    "-C", "link-arg=-s", "-C", "link-arg=NO_FILESYSTEM=1",
    "-C", "link-arg=-s", "-C", "link-arg=NO_EXIT_RUNTIME=1",
    '-C', 'link-arg=--js-library',
    '-C', 'link-arg=minilib.js'
    ]

[build]
#jobs = 4                  # number of parallel jobs, defaults to # of CPUs
rustc = "rustc"           # the rust compiler tool
rustdoc = "rustdoc"       # the doc generator tool
target = "asmjs-unknown-emscripten"         # build for the target triple
target-dir = "target"     # path of where to place all generated artifacts
#rustflags = ["..."]  # custom flags to pass to all compiler invocations

[term]
verbose = true        # whether cargo provides verbose output
color = 'auto'         # whether cargo colorizes output

# Alias cargo commands. The first 3 aliases are built in. If your
# command requires grouped whitespace use the list format.
[alias]
emscripten_release = [
    "rustc", "--release", "-vv", "--",
    "-C", "link-arg=-O3",
    "-C", "link-arg=--closure", "-C", "link-arg=1",
    "-Z", "no-trans",
    "-C", "link-arg=-s", "-C", "link-arg=ASSERTIONS=0",
    "-C", "link-arg=-s", "-C", "link-arg=DISABLE_EXCEPTION_CATCHING=1",
    "-C", "link-arg=-s", "-C", "link-arg=AGGRESSIVE_VARIABLE_ELIMINATION=1",
]
